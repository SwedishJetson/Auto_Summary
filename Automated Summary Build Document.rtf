{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 AndaleMono;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 How to automate a vulnerability summary page:\
\
Get URL for article (Google that shit)\
\
Download the article and scrape the CVEs. Compile them into a list.\
\
	This part is going to be hard to just get a clean list of CVEs out of the article\'85\
\
Download CVEs from NVD.\
\
Scrape the CVE html documents for the vulnerability descriptions and compile them into a summary\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1 \cf2 \cb3 \CocoaLigature0 echo -e "Target page has been downloaded.\\r\\n"\
#echo -e "Scraping article for CVEs.\\r\\n"\
#cat $target.html | grep CVE > $target_CVE_list.txt\
#echo -e "CVE list complete!\\r\\n"\
\
cat farts.html | grep 'CVE-[0-9]\\\{4\\\}-[0-9]\\\{4\\\}' | cut -d">" -f2 | cut -d"<" -f1 | sort -u | grep -v " " | egrep '^.\{1,13\}$'\
\
cat $name.html | grep 'CVE-[0-9]\\\{4\\\}-[0-9]\\\{4\\\}' | cut -d">" -f2 | cut -d"<" -f1 | sort -u | grep -v " " | egrep '^.\{1,13\}$' >> $name_CVE_list.txt\
\
article_count=$(ls | grep html | grep CVE\
\
Test Article URL: https://security-center.intel.com/advisory.aspx?intelid=INTEL-SA-00086&languageid=en-fr\
\
\
Conversion to Python\'85\
\
\
\
Add ons:\
\
Read the CVE_list.txt file\
	create a directory for each CVE\
	perform google search for each CVE\
	store top 10 results in txt file\
	download all 10 articles to directory\
	report completion}